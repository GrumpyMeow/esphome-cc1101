# https://github.com/dbuezas/esphome-cc1101
esphome:
  name: cc1101
  platform: ESP8266
  board: d1_mini
  includes:
    - cc1101.h
  libraries:
    - SPI
    - "SmartRC-CC1101-Driver-Lib"

wifi:
  ssid: !secret wifi_name
  password: !secret wifi_pass
  fast_connect: true
  power_save_mode: HIGH

logger:
api:
ota:

sensor:
  - platform: custom
    lambda: |-
      auto my_sensor = new CC1101(
        D5, // SCK
        D6, // MISO
        D7, // MOSI
        D3, // CSN
        D1, // GDO0
        200, // bandwidth_in_khz
        433.92 // freq_in_mhz
      );
      App.register_component(my_sensor);
      return {my_sensor};

    sensors:
      id: transciver_1
      name: "RSSI"
      unit_of_measurement: dBm
      entity_category: diagnostic
  # you can have multiple transcivers in the same board
  # with more than 2, an esp8266 will get out of RAM. You'll need to remove the logger and reduce the recevier buffer size to 200


number:
  - platform: template
    max_value: 812
    min_value: 58
    step: 1
    mode: slider
    optimistic: true
    unit_of_measurement: "kHz"
    name: BW
    on_value:
      then:
        - lambda: get_cc1101(transciver_1).setBW(x);
  - platform: template
    # min_value: 300
    # max_value: 348

    min_value: 378
    max_value: 464

    # min_value: 799
    # max_value: 928
    step: .001
    mode: box
    optimistic: true
    unit_of_measurement: "MHz"
    name: FREQ
    on_value:
      then:
        - lambda: get_cc1101(transciver_1).setFreq(x);
switch:
  - platform: template
    name: "RSSI"
    entity_category: diagnostic
    lambda: return get_cc1101(transciver_1).rssi_on;
    turn_on_action:
      lambda: get_cc1101(transciver_1).rssi_on = true;
    turn_off_action:
      lambda: get_cc1101(transciver_1).rssi_on = false;

remote_transmitter:
  - id: transmitter_1
    pin: D1 # This is GDO0
    carrier_duty_percent: 100%

remote_receiver:
  - id: receiver_1
    pin: D1 # This is GDO0
      # on the esp8266 use any of D1,D2,D5,D6,D7,Rx
      # Don't use D3,D4,D8,TX, boot often fails.
      # Can't be D0 or GPIO17 b/c no interrupts
    dump:
      - raw
binary_sensor:
  - platform: remote_receiver
    receiver_id: receiver_1
    name: Garage
    raw:
      code: [415,-300,370,-300,375,-300,378,-300,378,-300,379,-300,405]
button:
  - platform: template
    name: Garage
    on_press:
      - lambda: get_cc1101(transciver_1).beginTransmission();
      - remote_transmitter.transmit_raw:
          transmitter_id: transmitter_1
          code: [415,-300,370,-300,375,-300,378,-300,378,-300,379,-300,405]
      - lambda: get_cc1101(transciver_1).endTransmission();
